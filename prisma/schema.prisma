// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

enum VideoStatus {
  PLANNING
  SCRIPTING
  RECORDING
  EDITING
  PACKAGING
  DISTRIBUTION
  COMPLETED
}

enum TaskPhase {
  PLANNING
  RECORDING
  EDITING
  THUMBNAIL
  METADATA
  DISTRIBUTION
}

model VideoIdea {
  id           String      @id @default(cuid())
  title        String
  description  String?
  script       String?
  metadata     String?     // Changed from Json to String for SQLite compatibility
  thumbnailUrl String?
  status       VideoStatus @default(PLANNING)
  isUploaded   Boolean     @default(false)
  plannedDate  DateTime
  finishDate   DateTime?
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  tasks        Task[]
  excuseUses   ExcuseUse[]
  topics       Topic[]
}

model Task {
  id          String    @id @default(cuid())
  title       String
  isCompleted Boolean   @default(false)
  phase       TaskPhase
  order       Int
  notes       String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  videoIdea   VideoIdea @relation(fields: [videoIdeaId], references: [id], onDelete: Cascade)
  videoIdeaId String
}

model Topic {
  id          String      @id @default(cuid())
  name        String
  isTrending  Boolean     @default(false)
  trendScore  Float?
  videoIdeas  VideoIdea[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Excuse {
  id        String      @id @default(cuid())
  text      String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  uses      ExcuseUse[]
}

model ExcuseUse {
  id          String    @id @default(cuid())
  excuse      Excuse    @relation(fields: [excuseId], references: [id], onDelete: Cascade)
  excuseId    String
  videoIdea   VideoIdea @relation(fields: [videoIdeaId], references: [id], onDelete: Cascade)
  videoIdeaId String
  createdAt   DateTime  @default(now())
}
