generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model VideoIdea {
  id           String      @id @default(cuid())
  title        String
  description  String?
  script       String?
  metadata     String?
  thumbnailUrl String?
  status       String      @default("PLANNING")
  isUploaded   Boolean     @default(false)
  plannedDate  DateTime
  finishDate   DateTime?
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  excuseUses   ExcuseUse[]
  tasks        Task[]
  topics       Topic[]     @relation("TopicToVideoIdea")
}

model Task {
  id          String    @id @default(cuid())
  title       String
  isCompleted Boolean   @default(false)
  phase       String
  order       Int
  notes       String?
  videoIdeaId String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  videoIdea   VideoIdea @relation(fields: [videoIdeaId], references: [id], onDelete: Cascade)
}

model Topic {
  id         String      @id @default(cuid())
  name       String
  isTrending Boolean     @default(false)
  trendScore Float?
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  videoIdeas VideoIdea[] @relation("TopicToVideoIdea")
}

model Excuse {
  id        String      @id @default(cuid())
  text      String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  uses      ExcuseUse[]
}

model ExcuseUse {
  id          String    @id @default(cuid())
  excuseId    String
  videoIdeaId String
  createdAt   DateTime  @default(now())
  videoIdea   VideoIdea @relation(fields: [videoIdeaId], references: [id], onDelete: Cascade)
  excuse      Excuse    @relation(fields: [excuseId], references: [id], onDelete: Cascade)
}
