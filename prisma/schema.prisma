// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model VideoIdea {
  id          String      @id @default(cuid())
  title       String
  description String?
  script      String?     // Store the script content
  metadata    Json?       // Store metadata like tags, category, etc.
  thumbnailUrl String?    // Store the path to the thumbnail image
  status      VideoStatus @default(PLANNING)
  isUploaded  Boolean     @default(false)
  plannedDate DateTime
  finishDate  DateTime?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  tasks       Task[]
  topics      Topic[]
  excuseUses  ExcuseUse[]
}

model Task {
  id          String    @id @default(cuid())
  title       String
  isCompleted Boolean   @default(false)
  phase       TaskPhase
  order       Int
  notes       String?    // Add notes field for task-specific information
  videoIdea   VideoIdea @relation(fields: [videoIdeaId], references: [id], onDelete: Cascade)
  videoIdeaId String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([videoIdeaId])
}

model Topic {
  id          String     @id @default(cuid())
  name        String
  isTrending  Boolean    @default(false)
  trendScore  Float?
  videoIdeas  VideoIdea[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Excuse {
  id          String      @id @default(cuid())
  text        String      @unique
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  uses        ExcuseUse[]
}

model ExcuseUse {
  id          String      @id @default(cuid())
  excuse      Excuse      @relation(fields: [excuseId], references: [id], onDelete: Cascade)
  excuseId    String
  videoIdea   VideoIdea   @relation(fields: [videoIdeaId], references: [id], onDelete: Cascade)
  videoIdeaId String
  createdAt   DateTime    @default(now())

  @@unique([excuseId, videoIdeaId])
}

enum VideoStatus {
  PLANNING
  SCRIPTING
  RECORDING
  EDITING
  PACKAGING
  DISTRIBUTION
  COMPLETED
}

enum TaskPhase {
  IDEATION
  PLANNING
  SCRIPTING
  RECORDING
  EDITING
  THUMBNAIL
  METADATA
  DISTRIBUTION
  OTHER
}
